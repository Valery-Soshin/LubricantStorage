@page
@model LubricantStorage.UI.Web.Pages.Analytics.IndexModel
@{
    ViewData["Title"] = "Аналитика смазочных материалов";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h2 class="display-6">@ViewData["Title"]</h2>
            <p class="lead">Сравнительный анализ характеристик смазочных материалов</p>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form method="post" asp-page-handler="Compare">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <i class="fas fa-chart-bar me-2"></i>Выбор материалов для сравнения
            </div>
            <div class="card-body">
                <div class="row">
                    @foreach (var lubricant in Model.Lubricants)
                    {
                        <div class="col-md-4 mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" 
                                name="selectedLubricantIds" 
                                value="@lubricant.Id" 
                                id="lub-@lubricant.Id"
                                @(Model.SelectedLubricantIds.Contains(lubricant.Id) ? "checked" : "")>
                                <label class="form-check-label" for="lub-@lubricant.Id">
                                    @lubricant.Name (@lubricant.ApplicationType)
                                </label>
                            </div>
                        </div>
                    }
                </div>
                <button type="submit" class="btn btn-primary mt-3">
                    <i class="fas fa-chart-line me-2"></i>Сравнить
                </button>
            </div>
        </div>
    </form>

    @if (Model.SelectedLubricantIds.Any())
    {
        var selectedLubricants = Model.Lubricants.Where(l => Model.SelectedLubricantIds.Contains(l.Id)).ToList();

        <div class="row">
            <!-- График вязкости -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-success text-white">
                        <i class="fas fa-tint me-2"></i>Вязкость при разных температурах
                    </div>
                    <div class="card-body">
                        <canvas id="viscosityChart" height="300"></canvas>
                    </div>
                </div>
            </div>

            <!-- График температурных характеристик -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-info text-white">
                        <i class="fas fa-temperature-high me-2"></i>Температурные характеристики
                    </div>
                    <div class="card-body">
                        <canvas id="temperatureChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- График химических свойств -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-warning text-dark">
                        <i class="fas fa-flask me-2"></i>Химические свойства
                    </div>
                    <div class="card-body">
                        <canvas id="chemicalChart" height="300"></canvas>
                    </div>
                </div>
            </div>

            <!-- Таблица сравнения -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-secondary text-white">
                        <i class="fas fa-table me-2"></i>Сводная таблица характеристик
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Характеристика</th>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <th>@lubricant.Name</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Вязкость при 40°C (cSt)</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.KinematicViscosity40C</td>
                                        }
                                    </tr>
                                    <tr>
                                        <td>Вязкость при 100°C (cSt)</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.KinematicViscosity100C</td>
                                        }
                                    </tr>
                                    <tr>
                                        <td>Индекс вязкости</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.ViscosityIndex</td>
                                        }
                                    </tr>
                                    <!-- Добавьте остальные характеристики по аналогии -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        @if (Model.SelectedLubricantIds.Any())
        {
            var selectedLubricants = Model.Lubricants
                .Where(l => Model.SelectedLubricantIds.Contains(l.Id))
                .ToList();

            <text>
                    // 1. Подготовка данных
                    const lubricantsData = [
                @foreach (var lubricant in selectedLubricants)
                {
                    <text>
                                {
                                    name: '@lubricant.Name',
                                    viscosity40: @lubricant.Characteristics.KinematicViscosity40C,
                                    viscosity100: @lubricant.Characteristics.KinematicViscosity100C,
                                    pourPoint: @lubricant.Characteristics.PourPoint,
                                    flashPoint: @lubricant.Characteristics.FlashPoint,
                                    evaporationTemp: @lubricant.Characteristics.EvaporationTemperature,
                                    acidNumber: @lubricant.Characteristics.AcidNumber,
                                    baseNumber: @lubricant.Characteristics.BaseNumber
                                },
                    </text>
                }
                    ];

                    console.log('Данные для графиков:', lubricantsData); // Отладочный вывод

                    // 2. Проверка существования canvas элементов
                    const viscosityCtx = document.getElementById('viscosityChart');
                    const tempCtx = document.getElementById('temperatureChart');
                    const chemCtx = document.getElementById('chemicalChart');

                    if (!viscosityCtx || !tempCtx || !chemCtx) {
                        console.error('Один из элементов canvas не найден');
                        return;
                    }

                    // 3. Цветовая схема
                    const colors = [
                        { bg: 'rgba(78, 115, 223, 0.7)', border: 'rgba(78, 115, 223, 1)' },
                        { bg: 'rgba(28, 200, 138, 0.7)', border: 'rgba(28, 200, 138, 1)' },
                        { bg: 'rgba(54, 185, 204, 0.7)', border: 'rgba(54, 185, 204, 1)' }
                    ];

                    // 4. Инициализация графиков
                    try {
                        // График вязкости
                        new Chart(viscosityCtx, {
                            type: 'bar',
                            data: {
                                labels: ['При 40°C', 'При 100°C'],
                                datasets: lubricantsData.map((item, index) => ({
                                    label: item.name,
                                    data: [item.viscosity40, item.viscosity100],
                                    backgroundColor: colors[index % colors.length].bg,
                                    borderColor: colors[index % colors.length].border,
                                    borderWidth: 1
                                }))
                            },
                            options: getCommonOptions('Кинематическая вязкость (cSt)', 'Вязкость (cSt)')
                        });

                        // График температурных характеристик
                        new Chart(tempCtx, {
                            type: 'radar',
                            data: {
                                labels: ['Темп. застывания', 'Темп. вспышки', 'Темп. испарения'],
                                datasets: lubricantsData.map((item, index) => ({
                                    label: item.name,
                                    data: [item.pourPoint, item.flashPoint, item.evaporationTemp],
                                    backgroundColor: colors[index % colors.length].bg.replace('0.7', '0.2'),
                                    borderColor: colors[index % colors.length].border,
                                    borderWidth: 2
                                }))
                            },
                            options: getCommonOptions('Температурные характеристики (°C)')
                        });

                        // График химических свойств
                        new Chart(chemCtx, {
                            type: 'line',
                            data: {
                                labels: lubricantsData.map(item => item.name),
                                datasets: [
                                    {
                                        label: 'Кислотное число (TAN)',
                                        data: lubricantsData.map(item => item.acidNumber),
                                        borderColor: '#e74a3b',
                                        backgroundColor: 'rgba(231, 74, 59, 0.1)',
                                        tension: 0.1,
                                        yAxisID: 'y'
                                    },
                                    {
                                        label: 'Щелочное число (TBN)',
                                        data: lubricantsData.map(item => item.baseNumber),
                                        borderColor: '#1cc88a',
                                        backgroundColor: 'rgba(28, 200, 138, 0.1)',
                                        tension: 0.1,
                                        yAxisID: 'y1'
                                    }
                                ]
                            },
                            options: {
                                ...getCommonOptions('Химические свойства'),
                                scales: {
                                    y: {
                                        type: 'linear',
                                        display: true,
                                        position: 'left',
                                        title: { display: true, text: 'Кислотное число (TAN)' }
                                    },
                                    y1: {
                                        type: 'linear',
                                        display: true,
                                        position: 'right',
                                        title: { display: true, text: 'Щелочное число (TBN)' },
                                        grid: { drawOnChartArea: false }
                                    }
                                }
                            }
                        });

                        console.log('Все графики успешно инициализированы');
                    } catch (error) {
                        console.error('Ошибка при создании графиков:', error);
                    }

                    // Общие настройки для графиков
                    function getCommonOptions(title, yAxisTitle = '') {
                        return {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                title: {
                                    display: true,
                                    text: title,
                                    font: { size: 16 }
                                },
                                legend: {
                                    position: 'bottom'
                                }
                            },
                            scales: yAxisTitle ? {
                                y: {
                                    beginAtZero: false,
                                    title: {
                                        display: true,
                                        text: yAxisTitle
                                    }
                                }
                            } : {}
                        };
                    }
            </text>
        }
        else
        {
            <text>
                    console.log('Нет выбранных смазочных материалов для отображения графиков');
            </text>
        }
        });
    </script>
}