@page
@model LubricantStorage.UI.Web.Pages.Analytics.IndexModel
@{
    ViewData["Title"] = "Аналитика смазочных материалов";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h2 class="display-6">@ViewData["Title"]</h2>
            <p class="lead">Сравнительный анализ характеристик смазочных материалов</p>
        </div>
    </div>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form method="post" asp-page-handler="Compare">
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <i class="fas fa-chart-bar me-2"></i>Выбор материалов для сравнения
            </div>
            <div class="card-body">
                <div class="row">
                    @foreach (var lubricant in Model.Lubricants)
                    {
                        <div class="col-md-4 mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" 
                                name="selectedLubricantIds" 
                                value="@lubricant.Id" 
                                id="lub-@lubricant.Id"
                                @(Model.SelectedLubricantIds.Contains(lubricant.Id) ? "checked" : "")>
                                <label class="form-check-label" for="lub-@lubricant.Id">
                                    @lubricant.Name (@lubricant.ApplicationType)
                                </label>
                            </div>
                        </div>
                    }
                </div>
                <button type="submit" class="btn btn-primary mt-3">
                    <i class="fas fa-chart-line me-2"></i>Сравнить
                </button>
            </div>
        </div>
    </form>

    @if (Model.SelectedLubricantIds.Any())
    {
        var selectedLubricants = Model.Lubricants.Where(l => Model.SelectedLubricantIds.Contains(l.Id)).ToList();

        <div class="row">
            <!-- График вязкости -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-success text-white">
                        <i class="fas fa-tint me-2"></i>Вязкость при разных температурах
                    </div>
                    <div class="card-body">
                        <canvas id="viscosityChart" height="300"></canvas>
                    </div>
                </div>
            </div>

            <!-- График температурных характеристик -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-info text-white">
                        <i class="fas fa-temperature-high me-2"></i>Температурные характеристики
                    </div>
                    <div class="card-body">
                        <canvas id="temperatureChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- График химических свойств -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-warning text-dark">
                        <i class="fas fa-flask me-2"></i>Химические свойства
                    </div>
                    <div class="card-body">
                        <canvas id="chemicalChart" height="300"></canvas>
                    </div>
                </div>
            </div>

            <!-- Таблица сравнения -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header bg-secondary text-white">
                        <i class="fas fa-table me-2"></i>Сводная таблица характеристик
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Характеристика</th>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <th>@lubricant.Name</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>Вязкость при 40°C (cSt)</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.KinematicViscosity40C</td>
                                        }
                                    </tr>
                                    <tr>
                                        <td>Вязкость при 100°C (cSt)</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.KinematicViscosity100C</td>
                                        }
                                    </tr>
                                    <tr>
                                        <td>Индекс вязкости</td>
                                        @foreach (var lubricant in selectedLubricants)
                                        {
                                            <td>@lubricant.Characteristics.ViscosityIndex</td>
                                        }
                                    </tr>
                                    <!-- Добавьте остальные характеристики по аналогии -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        @if (Model.SelectedLubricantIds.Any())
        {
            <text>
                    try {
                        // 1. Подготовка данных с валидацией
                        const lubricantsData = [
                @foreach (var lubricant in Model.Lubricants.Where(l => Model.SelectedLubricantIds.Contains(l.Id)))
                {
                    <text>
                                    {
                                        name: '@Html.Raw(lubricant.Name)',
                                        viscosity40: validateNumber(@lubricant.Characteristics.KinematicViscosity40C, 0, 1000),
                                        viscosity100: validateNumber(@lubricant.Characteristics.KinematicViscosity100C, 0, 100),
                                        viscosityIndex: validateNumber(@lubricant.Characteristics.ViscosityIndex, 0, 400),
                                        pourPoint: validateNumber(@lubricant.Characteristics.PourPoint, -60, 50),
                                        flashPoint: validateNumber(@lubricant.Characteristics.FlashPoint, 100, 400),
                                        evaporationTemp: validateNumber(@lubricant.Characteristics.EvaporationTemperature, 50, 300),
                                        density: validateNumber(@lubricant.Characteristics.Density, 0.7, 1.2),
                                        acidNumber: validateNumber(@lubricant.Characteristics.AcidNumber, 0, 20),
                                        baseNumber: validateNumber(@lubricant.Characteristics.BaseNumber, 0, 30)
                                    },
                    </text>
                }
                        ];

                        console.log('Validated data:', lubricantsData);

                        // 2. Функция валидации чисел (включая отрицательные)
                        function validateNumber(value, min, max) {
                            const num = parseFloat(value);
                            if (isNaN(num)) {
                                console.warn(`Invalid number: ${value}, using default`);
                                return min;
                            }
                            return Math.min(Math.max(num, min), max);
                        }

                        // 3. Инициализация графиков только если есть данные
                        if (lubricantsData.length > 0) {
                            initViscosityChart(lubricantsData);
                            initTemperatureChart(lubricantsData);
                            initChemicalChart(lubricantsData);
                        }

                    } catch (error) {
                        console.error('Chart initialization error:', error);
                    }
            </text>
        }

            function initViscosityChart(data) {
                const ctx = document.getElementById('viscosityChart');
                if (!ctx) return;

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.map(d => d.name),
                        datasets: [
                            {
                                label: 'Вязкость при 40°C (cSt)',
                                data: data.map(d => d.viscosity40),
                                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                            {
                                label: 'Вязкость при 100°C (cSt)',
                                data: data.map(d => d.viscosity100),
                                backgroundColor: 'rgba(255, 99, 132, 0.7)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: false,
                                title: {
                                    display: true,
                                    text: 'Вязкость (cSt)'
                                }
                            }
                        }
                    }
                });
            }

            function initTemperatureChart(data) {
                const ctx = document.getElementById('temperatureChart');
                if (!ctx) return;

                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: data.map(d => d.name),
                        datasets: [
                            {
                                label: 'Температура застывания (°C)',
                                data: data.map(d => d.pourPoint),
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 2,
                                tension: 0.1
                            },
                            {
                                label: 'Температура вспышки (°C)',
                                data: data.map(d => d.flashPoint),
                                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                                borderColor: 'rgba(153, 102, 255, 1)',
                                borderWidth: 2,
                                tension: 0.1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: false,
                                title: {
                                    display: true,
                                    text: 'Температура (°C)'
                                }
                            }
                        }
                    }
                });
            }

            function initChemicalChart(data) {
                const ctx = document.getElementById('chemicalChart');
                if (!ctx) return;

                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.map(d => d.name),
                        datasets: [
                            {
                                label: 'Кислотное число (TAN)',
                                data: data.map(d => d.acidNumber),
                                backgroundColor: 'rgba(255, 159, 64, 0.7)'
                            },
                            {
                                label: 'Щелочное число (TBN)',
                                data: data.map(d => d.baseNumber),
                                backgroundColor: 'rgba(201, 203, 207, 0.7)'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        });
    </script>
}